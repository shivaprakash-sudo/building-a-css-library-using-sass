@use "sass:math";
@use "breakpoints" as *;

$grid-columns: 12;
$base-grid-gap: 0.625rem;

$grid-gaps: (
    "0": 0,
    "1": $base-grid-gap,
    "2": $base-grid-gap * 2,
    "3": $base-grid-gap * 3,
    "4": $base-grid-gap * 4,
);

$justify-content: (
    "between": space-between,
    "around": space-around,
    "evenly": space-evenly,
    "start": flex-start,
    "end": flex-end,
    "center": center,
);
$align-items: (
    "start": flex-start,
    "end": flex-end,
    "center": center,
);

// base layout classes
.container {
    width: 100%;
    max-width: 1200px;
    margin-inline: auto;
    padding-inline: 1.5rem;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

// grid gap
@each $key, $value in $grid-gaps {
    .gap-#{$key} {
        gap: $value;
    }
}

// justify content classes
@each $key, $value in $justify-content {
    .justify-#{$key} {
        justify-content: $value;
    }
}

// align items classes
@each $key, $value in $align-items {
    .align-#{$key} {
        align-items: $value;
    }
}

// num of columns based on breakpoints
@mixin generate-col-class($breakpoint) {
    @for $col-num from 1 through $grid-columns {
        .col-#{$col-num}-#{$breakpoint} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($col-num * 100%, $grid-columns);
        }
    }
}

// column classes
@include sm {
    @include generate-col-class(sm);
}
@include md {
    @include generate-col-class(md);
}
@include lg {
    @include generate-col-class(lg);
}
@include xl {
    @include generate-col-class(xl);
}
